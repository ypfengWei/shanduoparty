<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shanduo.party.mapper.UserMoneyMapper">
  <resultMap id="BaseResultMap" type="com.shanduo.party.entity.UserMoney">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="experience" jdbcType="INTEGER" property="experience" />
    <result column="beans" jdbcType="INTEGER" property="beans" />
    <result column="refresh" jdbcType="INTEGER" property="refresh" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, password, money, experience, beans, refresh, remarks, create_date, update_date, 
    del_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_money
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_money
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shanduo.party.entity.UserMoney">
    insert into user_money (user_id, password, money, 
      experience, beans, refresh, 
      remarks, create_date, update_date, 
      del_flag)
    values (#{userId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, 
      #{experience,jdbcType=INTEGER}, #{beans,jdbcType=INTEGER}, #{refresh,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shanduo.party.entity.UserMoney">
    insert into user_money
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="beans != null">
        beans,
      </if>
      <if test="refresh != null">
        refresh,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=INTEGER},
      </if>
      <if test="beans != null">
        #{beans,jdbcType=INTEGER},
      </if>
      <if test="refresh != null">
        #{refresh,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanduo.party.entity.UserMoney">
    update user_money
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=INTEGER},
      </if>
      <if test="beans != null">
        beans = #{beans,jdbcType=INTEGER},
      </if>
      <if test="refresh != null">
        refresh = #{refresh,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanduo.party.entity.UserMoney">
    update user_money
    set password = #{password,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      experience = #{experience,jdbcType=INTEGER},
      beans = #{beans,jdbcType=INTEGER},
      refresh = #{refresh,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    user_id, money, experience, beans, refresh,remarks
    from user_money
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <update id="updateRefresh">
    update user_money
    set 
	  refresh = 10
    where user_id not in (select user_id from shanduo_vip where vip_end_time > now())
  </update>
  <update id="updateVipRefresh">
    update user_money
    set 
	  refresh = 50
    where user_id in (select user_id from shanduo_vip where vip_end_time > now() and vip_type = '0' 
    and user_id not in (select user_id from shanduo_vip where vip_end_time > now() and vip_type = '1'))
  </update>
  <update id="updateSVipRefresh">
    update user_money
    set 
	  refresh = 100
    where user_id in (select user_id from shanduo_vip where vip_end_time > now() and vip_type = '1')
  </update>
</mapper>